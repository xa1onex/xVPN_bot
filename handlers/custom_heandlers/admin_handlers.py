import os

import peewee
import qrcode
from telebot.types import Message
from config_data.config import ALLOWED_USERS, DEFAULT_COMMANDS, ADMIN_COMMANDS, QR_CODE_DIR
from database.models import User, Server, VPNKey
from keyboards.inline.admin_buttons import (
    users_markup,
    admin_markup,
    get_vpn_markup,
    get_servers_markup,
    delete_vpn_markup,
    key_actions_markup
)
from loader import bot, app_logger
from states.states import AdminPanel
from utils.functions import valid_ip, convert_amnezia_xray_json_to_vless_str, get_all_commands_bot
from utils.generate_vpn_keys import setup_server, generate_key
from utils.work_vpn_keys import suspend_key, resume_key, revoke_key, cleanup_server


@bot.message_handler(commands=["admin_panel"])
def admin_panel(message: Message):
    """ –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ """
    if message.from_user.id in ALLOWED_USERS:
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.full_name} –∑–∞—à–µ–ª –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å.")
        bot.send_message(message.from_user.id, "üîß –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é –Ω–∏–∂–µ üëá",
                         reply_markup=admin_markup())
        bot.set_state(message.from_user.id, AdminPanel.get_option)
    else:
        bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤")
        app_logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.full_name} –ø—ã—Ç–∞–ª—Å—è –≤–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")


@bot.callback_query_handler(func=None, state=AdminPanel.get_option)
def admin_panel_handler(call):
    """ Callback handler –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ """
    bot.answer_callback_query(callback_query_id=call.id)

    if call.data == "Exit":
        bot.send_message(call.message.chat.id, "üö™ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏. –î–æ –≤—Å—Ç—Ä–µ—á–∏!")
        bot.set_state(call.message.chat.id, None)
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} –≤—ã—à–µ–ª –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏.")
    elif call.data == "users":
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} –∑–∞—à–µ–ª –≤ —é–∑–µ—Ä –ø–∞–Ω–µ–ª—å.")
        bot.send_message(call.message.chat.id, "üë• –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", reply_markup=users_markup())
        bot.set_state(call.message.chat.id, AdminPanel.get_users)
    elif call.data == "servers":
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} –∑–∞—à–µ–ª –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞–º–∏.")
        bot.send_message(call.message.chat.id, "üñ• –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞–º–∏:", reply_markup=get_servers_markup())
        bot.set_state(call.message.chat.id, AdminPanel.get_servers)


@bot.callback_query_handler(func=None, state=AdminPanel.get_users)
def get_user(call):
    """ –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —é–∑–µ—Ä–∞–º–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ """
    bot.answer_callback_query(callback_query_id=call.id)
    if call.data == "Exit":

        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é", reply_markup=admin_markup())
        bot.set_state(call.message.chat.id, AdminPanel.get_option)
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} –≤–µ—Ä–Ω—É–ª—Å—è –æ–±—Ä–∞—Ç–Ω–æ –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–π.")
    else:
        user_obj: User = User.get_by_id(call.data)
        try:
            vpn_key: VPNKey = user_obj.vpn_key
            vpn_key = vpn_key.name
        except Exception:
            vpn_key = "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} –∑–∞–ø—Ä–æ—Å–∏–ª "
                        f"–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user_obj.full_name}")
        bot.send_message(call.message.chat.id,
                         f"üë§ –ò–º—è: {user_obj.full_name}\n"
                         f"üì± –¢–µ–ª–µ–≥—Ä–∞–º: @{user_obj.username}\n"
                         f"üì¢ –ü–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª: {user_obj.is_subscribed}\n"
                         f"üîë VPN –∫–ª—é—á: {vpn_key}"
                         )


@bot.callback_query_handler(func=None, state=AdminPanel.get_servers)
def server_panel_handler(call):
    """ –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞–º–∏ """
    bot.answer_callback_query(callback_query_id=call.id)

    if call.data == "Add":
        bot.send_message(call.message.chat.id,
                         "üìÑ –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                         "üèô Location (–Ω–∞–ø—Ä–∏–º–µ—Ä, –°–®–ê)\n"
                         "üë§ Username (–Ω–∞–ø—Ä–∏–º–µ—Ä, root)\n"
                         "üîí Password (–ø–∞—Ä–æ–ª—å –æ—Ç root)\n"
                         "üåê IP address"
                         )
        bot.set_state(call.message.chat.id, AdminPanel.add_server)
        return

    server_id = call.data
    server_obj: Server = Server.get_by_id(server_id)

    app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} –∑–∞–ø—Ä–æ—Å–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ {server_obj.location}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä
    status = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω" if server_obj.public_key else "‚ùå –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"

    bot.send_message(call.message.chat.id,
                     f"üñ• –°–µ—Ä–≤–µ—Ä: {server_obj.location}\n"
                     f"üî∞ –°—Ç–∞—Ç—É—Å: {status}\n"
                     f"üåê IP –∞–¥—Ä–µ—Å: {server_obj.ip_address}\n"
                     f"üîë –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π: {server_obj.keys.count()}",
                     reply_markup=get_vpn_markup(server_id))
    bot.set_state(call.message.chat.id, AdminPanel.get_vpn_keys)


@bot.message_handler(state=AdminPanel.add_server)
def add_server(message: Message):
    """ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ """
    try:
        server_data = [item.strip() for item in message.text.split("\n")]
        if len(server_data) != 4:  # –£–±—Ä–∞–ª–∏ –ø–æ—Ä—Ç X-UI
            raise ValueError("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–µ–π!")
        elif valid_ip(server_data[3]) is False:
            raise ValueError("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç IP –∞–¥—Ä–µ—Å–∞!")

        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º
        server = Server.create(
            location=server_data[0],
            username=server_data[1],
            password=server_data[2],
            ip_address=server_data[3]
        )
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.full_name} –Ω–∞—á–∏–Ω–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞ {server.location}")
        bot.send_message(message.from_user.id, "–ù–∞—á–∏–Ω–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
        if setup_server(server):
            bot.send_message(message.from_user.id, "‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        else:
            bot.send_message(message.from_user.id, "‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞!")
            server.delete_instance()
            bot.set_state(message.from_user.id, None)
            return

        bot.set_state(message.from_user.id, None)
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.full_name} –¥–æ–±–∞–≤–∏–ª —Å–µ—Ä–≤–µ—Ä {server.location}")

    except Exception as ex:
        bot.send_message(message.from_user.id, f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!\n{ex}")
        app_logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞ {ex}")
        bot.set_state(message.from_user.id, None)


@bot.callback_query_handler(func=None, state=AdminPanel.get_vpn_keys)
def vpn_panel_handler(call):
    """ –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ –∫ —Å–µ—Ä–≤–µ—Ä—É VPN –∫–ª—é—á–∞–º–∏ """
    bot.answer_callback_query(callback_query_id=call.id)

    if "Generate" in call.data:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞
        server_id = call.data.split()[1]
        server = Server.get_by_id(server_id)
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} –∑–∞–ø—Ä–æ—Å–∏–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏—é"
                        f" VPN –∫–ª—é—á–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {server.location}")
        bot.send_message(call.message.chat.id, f"‚åõ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... –ò–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ VPN –∫–ª—é—á–∞...")
        key = generate_key(server)
        if key:
            bot.send_message(call.message.chat.id, f"‚úÖ –û—Ç–ª–∏—á–Ω–æ! VPN –∫–ª—é—á ¬´{key.name}¬ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
            app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª "
                            f"VPN –∫–ª—é—á {key.name} –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {server.location}")
        else:
            bot.send_message(call.message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–∞!")

        bot.set_state(call.message.chat.id, AdminPanel.get_vpn_keys)
        return

    if "Delete" in call.data:
        server_id = call.data.split()[1]
        server_obj: Server = Server.get_by_id(server_id)
        bot.send_message(call.message.chat.id, f"üóë –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        if cleanup_server(server_obj):
            app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} —É–¥–∞–ª–∏–ª —Å–µ—Ä–≤–µ—Ä {server_obj.location}")
            bot.send_message(call.message.chat.id, f"‚úÖ –°–µ—Ä–≤–µ—Ä {server_obj.location} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –≤–º–µ—Å—Ç–µ "
                                                   f"—Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ VPN –∫–ª—é—á–∞–º–∏!")
            bot.set_state(call.message.chat.id, AdminPanel.get_servers)
        else:
            bot.send_message(call.message.chat.id, "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞!")
            bot.set_state(call.message.chat.id, AdminPanel.get_servers)
        return

    if "VPN - " in call.data:
        # –í—ã–¥–∞—á–∞ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ VPN –∫–ª—é—á—É
        vpn_obj: VPNKey = VPNKey.get_by_id(call.data.split("VPN - ")[1])
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} –∑–∞–ø—Ä–æ—Å–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ VPN –∫–ª—é—á–µ {vpn_obj.name}")
        status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if vpn_obj.is_valid else "‚è∏ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω / –ó–∞–Ω—è—Ç"
        users = ", ".join([user.full_name for user in vpn_obj.users]) if vpn_obj.users else "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        text = (
            f"üîë –ö–ª—é—á: {vpn_obj.name}\n"
            f"üìç –°–µ—Ä–≤–µ—Ä: {vpn_obj.server.location}\n"
            f"üì° –°—Ç–∞—Ç—É—Å: {status}\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {users}\n"
            f"üïí –°–æ–∑–¥–∞–Ω: {vpn_obj.created_at.strftime('%d.%m.%Y %H:%M')}"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥ –µ—Å–ª–∏ –µ—Å—Ç—å
        if os.path.exists(vpn_obj.qr_code):
            with open(vpn_obj.qr_code, 'rb') as qr_file:
                bot.send_photo(call.message.chat.id, qr_file, caption=text,
                               reply_markup=key_actions_markup(vpn_obj.id))
        else:
            bot.send_message(call.message.chat.id, text,
                             reply_markup=key_actions_markup(vpn_obj.id))
        bot.set_state(call.message.chat.id, AdminPanel.delete_vpn)
    elif "Cancel" in call.data:
        # –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —Å–µ—Ä–≤–µ—Ä–æ–≤
        bot.send_message(call.message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é —Å–µ—Ä–≤–µ—Ä–æ–≤.",
                         reply_markup=get_servers_markup())
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} –≤–µ—Ä–Ω—É–ª—Å—è –≤ –º–µ–Ω—é —Å–µ—Ä–≤–µ—Ä–æ–≤")
        bot.set_state(call.message.chat.id, AdminPanel.get_servers)
    else:
        bot.set_state(call.message.chat.id, AdminPanel.get_vpn_keys)

@bot.callback_query_handler(func=None, state=AdminPanel.delete_vpn)
def vpn_panel_handler(call):
    """ –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è VPN –∫–ª—é—á–∞ """
    bot.answer_callback_query(callback_query_id=call.id)

    if "action_" in call.data:
        action, key_id = call.data.split("_")[1], call.data.split("_")[2]
        vpn_key = VPNKey.get_by_id(key_id)

        if action == "suspend":
            app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.message.from_user.full_name} –∑–∞–ø—Ä–æ—Å–∏–ª –æ—Å—Ç–∞–Ω–æ–≤–∫—É "
                            f"VPN –∫–ª—é—á–∞ {vpn_key.name}")
            if suspend_key(vpn_key):
                bot.send_message(call.message.chat.id, f"‚è∏ –ö–ª—é—á {vpn_key.name} –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            else:
                bot.send_message(call.message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–ª—é—á–∞!")

        elif action == "resume":
            app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.message.from_user.full_name} –∑–∞–ø—Ä–æ—Å–∏–ª –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã "
                            f"VPN –∫–ª—é—á–∞ {vpn_key.name}")
            if resume_key(vpn_key):
                bot.send_message(call.message.chat.id, f"‚ñ∂Ô∏è –ö–ª—é—á {vpn_key.name} –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω")
            else:
                bot.send_message(call.message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞!")

        elif action == "revoke":
            app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.message.from_user.full_name} –∑–∞–ø—Ä–æ—Å–∏–ª –æ—Ç–∑—ã–≤ "
                            f"VPN –∫–ª—é—á–∞ {vpn_key.name}")
            if revoke_key(vpn_key):
                for user in User.select().where(User.vpn_key == vpn_key):
                    user.vpn_key = None
                    user.save()
                bot.send_message(call.message.chat.id, f"üóë –ö–ª—é—á {vpn_key.name} –æ—Ç–æ–∑–≤–∞–Ω")
            else:
                bot.send_message(call.message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∑—ã–≤–∞ –∫–ª—é—á–∞!")

        bot.set_state(call.message.chat.id, AdminPanel.get_servers)
        return

    if "Cancel" in call.data:
        bot.send_message(call.message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É.",
                         reply_markup=admin_markup())
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.from_user.full_name} –≤–µ—Ä–Ω—É–ª—Å—è –≤ –∞–¥–º–∏–Ω–∫—É")
        bot.set_state(call.message.chat.id, AdminPanel.get_option)
        return
    else:
        # –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –¥—Ä—É–≥–æ–π VPN –∫–ª—é—á
        bot.set_state(call.message.chat.id, AdminPanel.get_vpn_keys)
        vpn_panel_handler(call)


@bot.message_handler(commands=["message_sending"])
def message_sending_handler(message: Message):
    """ –•–µ–Ω–¥–ª–µ—Ä —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —é–∑–µ—Ä–∞–º """
    if message.from_user.id in ALLOWED_USERS:
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.full_name} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /message_sending.")
        bot.send_message(message.from_user.id, "‚úâÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:")
        bot.set_state(message.from_user.id, AdminPanel.send_message)
    else:
        bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
        app_logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ /message_sending –±–µ–∑ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ {message.from_user.full_name}")


@bot.message_handler(state=AdminPanel.send_message)
def send_message_to_users_handler(message: Message):
    """ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º """
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ - –Ω–µ –æ–¥–Ω–∞ –∏–∑ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞

    if message.text in get_all_commands_bot():
        bot.send_message(message.from_user.id, "–≠—Ç–æ –æ–¥–Ω–∞ –∏–∑ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞")
        bot.set_state(message.from_user.id, None)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—É—Å—Ç–æ–µ
    if not message.text:
        bot.send_message(message.from_user.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
        return
    app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.full_name} –Ω–∞—á–∞–ª —Ä–∞—Å—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π: {message.text}")

    bot.send_message(message.chat.id, "–ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É...")
    bot.send_chat_action(message.chat.id, "typing")
    for user_obj in User.select():
        if int(user_obj.user_id) not in ALLOWED_USERS:
            bot.send_message(user_obj.user_id, message.text)
    bot.send_message(message.chat.id, "‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    bot.set_state(message.from_user.id, None)


@bot.message_handler(commands=["add_vpn_key"])
def add_vpn_key_handler(message: Message):
    """ –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è VPN –∫–ª—é—á–∞ """
    if message.from_user.id in ALLOWED_USERS:
        app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.full_name} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /add_vpn_key.")
        bot.send_message(message.from_user.id, "üîë –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ VPN –∫–ª—é—á–∞:")
        bot.set_state(message.from_user.id, AdminPanel.add_vpn_key_name)
    else:
        bot.send_message(message.from_user.id, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")


@bot.message_handler(state=AdminPanel.add_vpn_key_name)
def add_vpn_key_name_handler(message: Message):
    """ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è VPN –∫–ª—é—á–∞ """
    app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.full_name} –≤–≤–µ–ª –Ω–∞–∑–≤–∞–Ω–∏–µ VPN –∫–ª—é—á–∞: {message.text}")
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data["vpn_key_name"] = message.text
    bot.send_message(message.from_user.id, "üîë –í–≤–µ–¥–∏—Ç–µ VPN KEY –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏–ª–∏ "
                                           "VLESS-—Å—Å—ã–ª–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, vless://...) :")
    bot.set_state(message.from_user.id, AdminPanel.add_vpn_key_key)


@bot.message_handler(state=AdminPanel.add_vpn_key_key)
def add_vpn_key_key_handler(message: Message):
    """ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ VPN –∫–ª—é—á–∞ """

    if message.text in get_all_commands_bot():
        bot.send_message(message.from_user.id, "–≠—Ç–æ –æ–¥–Ω–∞ –∏–∑ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞")
        bot.set_state(message.from_user.id, None)
        return

    app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.full_name} –≤–≤–µ–ª VPN –∫–ª—é—á")
    if "vless://" not in message.text:
        vless_str = convert_amnezia_xray_json_to_vless_str(message.text)
        if vless_str is None:
            bot.send_message(message.from_user.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å JSON –≤ VLESS —Å—Ç—Ä–æ–∫—É. "
                                                   "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.")
            app_logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å json –∫–æ–Ω—Ñ–∏–≥ –≤ vless —Å—Ç—Ä–æ–∫—É!")
            return
    else:
        vless_str = message.text
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data["vpn_key_key"] = vless_str
    bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫–ª—é—á",
                     reply_markup=get_servers_markup())
    bot.set_state(message.from_user.id, AdminPanel.save_vpn_key)


@bot.callback_query_handler(func=None, state=AdminPanel.save_vpn_key)
def save_vpn_handler(call):
    """ –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î VPN –∫–ª—é—á–∞ """
    bot.answer_callback_query(callback_query_id=call.id)

    if call.data == "Add":
        bot.send_message(call.message.chat.id,
                         "üìÑ –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                         "üèô Location (–Ω–∞–ø—Ä–∏–º–µ—Ä, –°–®–ê)\n"
                         "üë§ Username (–Ω–∞–ø—Ä–∏–º–µ—Ä, root)\n"
                         "üîí Password (–ø–∞—Ä–æ–ª—å –æ—Ç root)\n"
                         "üåê IP address"
                         )
        bot.set_state(call.message.chat.id, AdminPanel.add_server)
        return

    server_id = call.data
    server_obj: Server = Server.get_by_id(server_id)
    with bot.retrieve_data(call.from_user.id, call.from_user.id) as data:
        try:
            key_number = len(server_obj.keys) + 1 if hasattr(server_obj, "keys") else 1
            qr_code_filename = f"vpn_key_{server_obj.id}_{key_number}.png"
            qr_code_path = os.path.join(QR_CODE_DIR, qr_code_filename)
            qr = qrcode.QRCode(
                version=1,
                error_correction=qrcode.constants.ERROR_CORRECT_H,
                box_size=10,
                border=4
            )
            qr.add_data(data["vpn_key_key"])
            qr.make(fit=True)
            img = qr.make_image(fill_color="black", back_color="white")
            img.save(qr_code_path)
            app_logger.info(f"QR-–∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –ø–æ –ø—É—Ç–∏: {qr_code_path}")
            vpn_key = VPNKey.create(
                name=data["vpn_key_name"],
                key=data["vpn_key_key"],
                qr_code=qr_code_path,
                server=server_obj,
            )
        except peewee.IntegrityError:
            bot.send_message(call.message.chat.id, "–¢–∞–∫–æ–π –∫–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            bot.send_message(call.message.chat.id, "–í—ã –≤—ã—à–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            app_logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–∞ VPN –∫–ª—é—á–∞ {data['vpn_key_name']}!")

        else:
            app_logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {call.message.from_user.full_name} –¥–æ–±–∞–≤–∏–ª VPN –∫–ª—é—á {vpn_key.name} "
                            f"–∫ —Å–µ—Ä–≤–µ—Ä—É {server_obj.location}")
            bot.send_message(call.message.chat.id, f"VPN –∫–ª—é—á {vpn_key.name} –¥–æ–±–∞–≤–ª–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É {server_obj.location}.")
        bot.set_state(call.message.chat.id, None)
