from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

from config_data.config import ALLOWED_USERS
from database.models import User, Server
from i18n_middleware import _


def admin_markup():
    """ Inline buttons –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞ """
    actions = InlineKeyboardMarkup(row_width=2)
    actions.add(InlineKeyboardButton(text=_("üñ• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞–º–∏"), callback_data="servers"))
    actions.add(InlineKeyboardButton(text=_("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"), callback_data="users"))
    actions.add(InlineKeyboardButton(text=_("üö™ –í—ã–π—Ç–∏"), callback_data="Exit"))
    return actions


def users_markup(page: int = 1, per_page: int = 10) -> InlineKeyboardMarkup:
    """
    Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
    –û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö user_id –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ ALLOWED_USERS.
    """
    offset = (page - 1) * per_page
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞ –æ–¥–Ω—É –∑–∞–ø–∏—Å—å –±–æ–ª—å—à–µ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    users_query = User.select().where(
        User.user_id.not_in(ALLOWED_USERS)
    ).order_by(User.full_name).offset(offset).limit(per_page + 1)
    users_list = list(users_query)
    has_next = len(users_list) > per_page
    if has_next:
        users_list = users_list[:per_page]

    markup = InlineKeyboardMarkup(row_width=2)
    for user in users_list:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "user_" –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        markup.add(InlineKeyboardButton(text=f"üë§ {user.full_name}", callback_data=f"user_{user.id}"))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    pagination_buttons = []
    if page > 1:
        pagination_buttons.append(InlineKeyboardButton(text=_("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
                                                       callback_data=f"users_page_{page - 1}"))
    if has_next:
        pagination_buttons.append(InlineKeyboardButton(text=_("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è"),
                                                       callback_data=f"users_page_{page + 1}"))
    if pagination_buttons:
        markup.row(*pagination_buttons)
    markup.add(InlineKeyboardButton(text=_("üîô –í—ã–π—Ç–∏"), callback_data="Exit_to_admin_panel"))
    return markup


def get_servers_markup():
    """ Inline buttons –¥–ª—è –≤—ã–¥–∞—á–∏ –≤—Å–µ—Ö –ª–æ–∫–∞—Ü–∏–π —Å–µ—Ä–≤–µ—Ä–æ–≤ """
    actions = InlineKeyboardMarkup(row_width=1)
    servers_obj = Server.select()
    for server in servers_obj:
        actions.add(InlineKeyboardButton(text=f"üåç {server.location}", callback_data=str(server.id)))
    actions.add(InlineKeyboardButton(text=_("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"), callback_data="Add"))
    return actions

def get_vpn_markup(server_id):
    """ Inline buttons –¥–ª—è –≤—ã–¥–∞—á–∏ vpn –∫–ª—é—á–µ–π —Å–µ—Ä–≤–µ—Ä–∞ """
    cur_server: Server = Server.get_by_id(server_id)
    actions = InlineKeyboardMarkup(row_width=2)
    for vpn_key_obj in cur_server.keys:
        actions.add(InlineKeyboardButton(text=f"üîë {vpn_key_obj.name}", callback_data=f"VPN - {str(vpn_key_obj.id)}"))
    actions.add(InlineKeyboardButton(text=_("üîÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á"), callback_data=f"Generate {cur_server.id}"))
    actions.add(InlineKeyboardButton(text=_("üóë –£–¥–∞–ª–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"), callback_data=f"Delete {cur_server.id}"),
                InlineKeyboardButton(text=_("üîô –ù–∞–∑–∞–¥"), callback_data="Cancel"))  # –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —Å–µ—Ä–≤–µ—Ä–æ–≤
    return actions

def delete_vpn_markup(vpn_obj_id: int):
    """ Inline buttons –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è vpn –∫–ª—é—á–∞ """
    actions = InlineKeyboardMarkup(row_width=2)
    actions.add(InlineKeyboardButton(text=_("üóë –£–¥–∞–ª–∏—Ç—å"), callback_data=f"Del - {vpn_obj_id}"),
                InlineKeyboardButton(text=_("üö™ –í—ã–π—Ç–∏"), callback_data="Cancel"))
    return actions


def key_actions_markup(key_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–æ–º:
    - –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å
    - –û—Ç–æ–∑–≤–∞—Ç—å
    - –ù–∞–∑–∞–¥
    """
    markup = InlineKeyboardMarkup(row_width=2)

    markup.add(
        InlineKeyboardButton(_("‚è∏ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"), callback_data=f"action_suspend_{key_id}"),
        InlineKeyboardButton(_("‚ñ∂Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å"), callback_data=f"action_resume_{key_id}"),
        InlineKeyboardButton(_("üóë –û—Ç–æ–∑–≤–∞—Ç—å"), callback_data=f"action_revoke_{key_id}"),
        InlineKeyboardButton(_("üîô –ù–∞–∑–∞–¥"), callback_data="Cancel")
    )
    return markup