import datetime

from apscheduler.schedulers.background import BackgroundScheduler

from keyboards.inline.subscribed import get_renew_markup
from loader import bot, app_logger
from database.models import VPNKey, User
from config_data.config import CHANNEL_ID, ALLOWED_USERS
from utils.functions import is_subscribed
from utils.work_vpn_keys import revoke_key

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è job_id –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ –æ—Ç–∑—ã–≤—É –∫–ª—é—á–µ–π
pending_revocation_jobs = {}


def check_and_revoke_keys():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω—ã –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–º –≤—ã–¥–∞–Ω—ã VPN –∫–ª—é—á–∏.
    –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç—Å—è, —á—Ç–æ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ –∫–ª—é—á—É, –æ—Ç–ø–∏—Å–∞–ª—Å—è,
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –æ—Ç–∑—ã–≤–∞–µ—Ç –∫–ª—é—á.
    """
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª—é—á–∏
    app_logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")

    active_keys = VPNKey.select().where(VPNKey.is_valid == False)
    for vpn_key in active_keys:
        revoke_this = False
        for user in vpn_key.users:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if not is_subscribed(CHANNEL_ID, user.user_id):
                user.is_subscribed = False
                user.vpn_key = None
                user.save()
                try:
                    bot.send_message(user.user_id,
                        "–í–∞—à VPN –∫–ª—é—á –æ—Ç–æ–∑–≤–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –≤—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –∫–∞–Ω–∞–ª–∞.")
                    app_logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.full_name} –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç –∫–∞–Ω–∞–ª–∞, "
                                    f"–ø–æ—ç—Ç–æ–º—É –µ–≥–æ –∫–ª—é—á {vpn_key.name} –±—ã–ª –æ—Ç–æ–∑–≤–∞–Ω!")
                    # for admin_id in ALLOWED_USERS:
                    #     bot.send_message(admin_id,
                    #         f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.full_name} –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç –∫–∞–Ω–∞–ª–∞, "
                    #                 f"–ø–æ—ç—Ç–æ–º—É –µ–≥–æ –∫–ª—é—á {vpn_key.name} –±—ã–ª –æ—Ç–æ–∑–≤–∞–Ω!")
                except Exception as e:
                    app_logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}: {e}")
                revoke_this = True
        if revoke_this:
            if revoke_key(vpn_key):
                app_logger.info(f"VPN –∫–ª—é—á {vpn_key.id} –æ—Ç–æ–∑–≤–∞–Ω –∏–∑-–∑–∞ –æ—Ç–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–µ–π).")
            else:
                app_logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∑—ã–≤–µ –∫–ª—é—á–∞ {vpn_key.id}.")


def schedule_key_revocation(vpn_key: VPNKey, user_obj: User, scheduler: BackgroundScheduler):
    """
    –ü–ª–∞–Ω–∏—Ä—É–µ—Ç –∑–∞–¥–∞—á—É –æ—Ç–∑—ã–≤–∞ –∫–ª—é—á–∞ —á–µ—Ä–µ–∑ 1 —á–∞—Å.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ –ø–æ vpn_key.id.
    """
    def revoke_job():
        # –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –Ω–µ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ (—Ç–æ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–æ–¥–ª–∏–ª –∫–ª—é—á)
        if vpn_key.id in pending_revocation_jobs:
            try:
                bot.send_message(
                    user_obj.user_id,
                    f"‚åõ –í—Ä–µ–º—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è VPN –∫–ª—é—á–∞ ¬´{vpn_key.name}¬ª –∏—Å—Ç–µ–∫–ª–æ! –ö–ª—é—á –±—ã–ª –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω.\n"
                    f"–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –°–µ—Ä–≤–µ—Ä—ã üëá"
                )
            except Exception as e:
                app_logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_obj.full_name}: {e}")
            revoke_key(vpn_key)
            user_obj.vpn_key = None
            user_obj.save()
            app_logger.info(f"VPN –∫–ª—é—á {vpn_key.name} –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è!")
            # –£–±–∏—Ä–∞–µ–º –∑–∞–¥–∞—á—É –∏–∑ pending_revocation_jobs
            pending_revocation_jobs.pop(vpn_key.id, None)

    # –ü–ª–∞–Ω–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 1 —á–∞—Å
    job = scheduler.add_job(revoke_job, 'date', run_date=datetime.datetime.now() + datetime.timedelta(hours=1))
    pending_revocation_jobs[vpn_key.id] = job.id
    app_logger.info(f"–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –∑–∞–¥–∞—á–∞ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –∫–ª—é—á–∞ {vpn_key.name} —á–µ—Ä–µ–∑ 1 —á–∞—Å.")

def cancel_key_revocation(vpn_key: VPNKey, scheduler: BackgroundScheduler):
    """
    –û—Ç–º–µ–Ω—è–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∑–∞–¥–∞—á—É –æ—Ç–∑—ã–≤–∞ –∫–ª—é—á–∞, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
    """
    job_id = pending_revocation_jobs.pop(vpn_key.id, None)
    if job_id:
        scheduler.remove_job(job_id)
        app_logger.info(f"–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –∫–ª—é—á–∞ {vpn_key.name} –æ—Ç–º–µ–Ω–µ–Ω–∞.")


def send_renewal_notifications(scheduler: BackgroundScheduler):
    """
    –ö–∞–∂–¥—ã–µ 8 —á–∞—Å–æ–≤ —Ä–∞—Å—Å—ã–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ VPN –∫–ª—é—á–µ–π.
    –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ (–∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ) –∫–ª—é—á–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–Ω–æ–ø–∫–æ–π.
    –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∑–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä–∞—è —á–µ—Ä–µ–∑ 1 —á–∞—Å –æ—Ç–∑–æ–≤–µ—Ç –∫–ª—é—á, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–∂–º—ë—Ç –∫–Ω–æ–ø–∫—É.
    """
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω VPN –∫–ª—é—á (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å vpn_key)
    app_logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ VPN –∫–ª—é—á–µ–π...")

    for user in User.select().where(User.vpn_key.is_null(False)):
        vpn_key = user.vpn_key
        try:
            bot.send_message(
                user.user_id,
                f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤–∞—à–µ–≥–æ VPN –∫–ª—é—á–∞ ¬´{vpn_key.name}¬ª —Å–∫–æ—Ä–æ –∏—Å—Ç–µ—á—ë—Ç.\n"
                "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–ª–∏—Ç—å –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–µ.",
                reply_markup=get_renew_markup(vpn_key.id)
            )
            # –ü–ª–∞–Ω–∏—Ä—É–µ–º –∑–∞–¥–∞—á—É –æ—Ç–∑—ã–≤–∞ –∫–ª—é—á–∞ —á–µ—Ä–µ–∑ 1 —á–∞—Å
            schedule_key_revocation(vpn_key, user, scheduler)
        except Exception as e:
            app_logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}: {e}")
