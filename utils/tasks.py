import datetime

from apscheduler.schedulers.background import BackgroundScheduler

from keyboards.inline.subscribed import get_renew_markup_for_user
from loader import bot, app_logger
from database.models import VPNKey, User, UserVPNKey
from config_data.config import CHANNEL_ID, ALLOWED_USERS
from utils.functions import is_subscribed
from utils.work_vpn_keys import revoke_key

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è job_id –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ –æ—Ç–∑—ã–≤—É –∫–ª—é—á–µ–π
pending_revocation_jobs = {}


def check_and_revoke_keys():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω—ã –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∏ –æ—Ç–∑—ã–≤–∞–µ—Ç –≤—Å–µ VPN –∫–ª—é—á–∏ —É —Ç–µ—Ö, –∫—Ç–æ –æ—Ç–ø–∏—Å–∞–ª—Å—è.
    """
    app_logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for user in User.select():
        if is_subscribed(CHANNEL_ID, user.user_id):
            user.is_subscribed = True
            user.save()
        else:
            user.is_subscribed = False
            app_logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.full_name} –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª.")
            # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ VPN –∫–ª—é—á–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—á–µ—Ä–µ–∑ —Å–≤—è–∑—å many-to-many)
            for uv in list(user.vpn_keys):
                vpn_key = uv.vpn_key
                try:
                    bot.send_message(
                        user.user_id,
                        f"üö´ –í–∞—à VPN –∫–ª—é—á ¬´{vpn_key.name}¬ª –±—ã–ª –æ—Ç–æ–∑–≤–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –≤—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –∫–∞–Ω–∞–ª–∞."
                    )
                    app_logger.info(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.full_name} –∫–ª—é—á {vpn_key.name} –æ—Ç–æ–∑–≤–∞–Ω.")
                except Exception as e:
                    app_logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}: {e}")
                # –û—Ç–∑—ã–≤–∞–µ–º –∫–ª—é—á (—Ñ—É–Ω–∫—Ü–∏—è revoke_key –¥–æ–ª–∂–Ω–∞ –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ—Ç–∑—ã–≤ –∫–ª—é—á–∞)
                if revoke_key(vpn_key):
                    app_logger.info(f"VPN –∫–ª—é—á {vpn_key.id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–∑–≤–∞–Ω.")
                else:
                    app_logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∑—ã–≤–µ –∫–ª—é—á–∞ {vpn_key.id}.")
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –µ–≥–æ VPN –∫–ª—é—á–∞–º–∏
            UserVPNKey.delete().where(UserVPNKey.user == user).execute()
            user.save()


def schedule_key_revocation_for_user(user_obj: User, scheduler: BackgroundScheduler):
    """
    –ü–ª–∞–Ω–∏—Ä—É–µ—Ç –∑–∞–¥–∞—á—É –æ—Ç–∑—ã–≤–∞ –≤—Å–µ—Ö VPN –∫–ª—é—á–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ 1 —á–∞—Å.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ –ø–æ user_obj.user_id.
    """
    def revoke_job():
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –µ–≥–æ –∫–ª—é—á–∏ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω—ã
            bot.send_message(
                user_obj.user_id,
                f"‚åõ –í—Ä–µ–º—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è VPN –∫–ª—é—á–µ–π –∏—Å—Ç–µ–∫–ª–æ! –í—Å–µ –≤–∞—à–∏ VPN –∫–ª—é—á–∏ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω—ã.\n"
                "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ—Ä–≤–∏—Å–æ–º, —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á."
            )
        except Exception as e:
            app_logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_obj.user_id}: {e}")
        # –û—Ç–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        for uv in list(user_obj.vpn_keys):
            vpn_key = uv.vpn_key
            if revoke_key(vpn_key):
                app_logger.info(f"VPN –∫–ª—é—á {vpn_key.name} –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ "
                                f"–ø—Ä–æ–¥–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_obj.user_id}.")
            else:
                app_logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∑—ã–≤–µ VPN –∫–ª—é—á–∞ {vpn_key.name} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_obj.user_id}.")
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å–≤—è–∑–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        UserVPNKey.delete().where(UserVPNKey.user == user_obj).execute()
        pending_revocation_jobs.pop(user_obj.user_id, None)

    # –ü–ª–∞–Ω–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 1 —á–∞—Å
    run_time = datetime.datetime.now() + datetime.timedelta(hours=1)
    job = scheduler.add_job(revoke_job, 'date', run_date=run_time)
    pending_revocation_jobs[user_obj.user_id] = job.id
    app_logger.info(f"–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –∑–∞–¥–∞—á–∞ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_obj.full_name} "
                    f"(ID: {user_obj.user_id}) —á–µ—Ä–µ–∑ 1 —á–∞—Å.")

def cancel_key_revocation_for_user(user_obj: User, scheduler: BackgroundScheduler):
    """
    –û—Ç–º–µ–Ω—è–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∑–∞–¥–∞—á—É –æ—Ç–∑—ã–≤–∞ VPN –∫–ª—é—á–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
    """
    job_id = pending_revocation_jobs.pop(user_obj.user_id, None)
    if job_id:
        scheduler.remove_job(job_id)
        app_logger.info(f"–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_obj.full_name} –æ—Ç–º–µ–Ω–µ–Ω–∞.")


def send_renewal_notifications(scheduler: BackgroundScheduler):
    """
    –ö–∞–∂–¥—ã–µ 8 —á–∞—Å–æ–≤ —Ä–∞—Å—Å—ã–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ VPN –∫–ª—é—á–µ–π.
    –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–∫—Ç–∏–≤–Ω—ã–π VPN –∫–ª—é—á, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline‚Äë–∫–Ω–æ–ø–∫–æ–π.
    –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∑–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä–∞—è —á–µ—Ä–µ–∑ 1 —á–∞—Å –æ—Ç–∑–æ–≤–µ—Ç –≤—Å–µ –∫–ª—é—á–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–∂–º—ë—Ç –∫–Ω–æ–ø–∫—É.
    """
    app_logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ VPN –∫–ª—é—á–µ–π...")
    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–ª—é—á –≤ —Å–≤—è–∑–∏
    for user in User.select():
        # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å VPN –∫–ª—é—á–∏ (—á–µ—Ä–µ–∑ —Å–≤—è–∑—å many-to-many)
        if user.vpn_keys.count() > 0:
            try:
                bot.send_message(
                    user.user_id,
                    f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤–∞—à–∏—Ö VPN –∫–ª—é—á–µ–π —Å–∫–æ—Ä–æ –∏—Å—Ç–µ—á—ë—Ç.\n"
                    "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–ª–∏—Ç—å –∏—Ö –¥–µ–π—Å—Ç–≤–∏–µ.",
                    reply_markup=get_renew_markup_for_user(user.user_id)
                )
                # –ü–ª–∞–Ω–∏—Ä—É–µ–º –∑–∞–¥–∞—á—É –æ—Ç–∑—ã–≤–∞ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ 1 —á–∞—Å
                schedule_key_revocation_for_user(user, scheduler)
            except Exception as e:
                app_logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}: {e}")
